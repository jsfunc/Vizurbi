debug_mode=true;inactiveNodeColor="gray";activeRouteColor="#4f8598";inactiveRouteColor="#a9c5d0";highlightRouteColor="#000";function createMap(){if(debug_mode){var d=performance.now()}network=new L.LayerGroup();var c='&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors',b="http://{s}.tile.osm.org/{z}/{x}/{y}.png";var a=L.tileLayer(b,{styleId:22677,attribution:c});var e=L.latLng(43.617,1.45);vehicles=new L.layerGroup();map=L.map("myMap",{center:e,zoom:13,minZoom:11,maxZoom:17,layers:[a,network,vehicles]});L.Icon.Default.imagePath="images/leaflet/";map.spin(true,{length:0,width:20,radius:60,color:"#F4AC42"});if(!getCookie("neverShowIntro")){introInfo=L.control({position:"topleft"});neverShowIntro=function(){setCookie("neverShowIntro","true");introInfo.removeFrom(map)};introInfo.onAdd=function(h){var f=L.DomUtil.create("div","introInfo");var g="<h2>Bienvenue sur Vizurbi!";g=g+'<a  href=# onClick=\'introInfo.removeFrom(map);\' style="position:absolute; right:10px;"><img src="images/icons/close.png" width="30px" /></a></h2>';g=g+"<h3>Tout le réseau Tisséo en un coup d'&oelig;il</h3>";g=g+"<ul>";g=g+"<li>Tant que la roue tourne, les données se chargent (une bonne dizaine de secondes à la première visite).</li>";g=g+'<li><span class="highlight">Cliquez sur un arrêt</span> : tous les temps de transport à partir de cet arrêt sont calculés.</li>';g=g+"<li>Les plus courts apparaissent en vert, les points rouges sont à 30 minutes.</li>";g=g+'<li><span class="highlight">Survolez un arrêt</span> : le meilleur chemin pour s\'y rendre apparaît en haut à droite de la carte.</li>';g=g+"<li>Pour avoir tous les horaires d'un arrêt ou d'une ligne, <span class=\"highlight\">cliquez dessus avec le bouton droit</span> !</li>";g=g+"<li>Plus d'informations, plus de fonctionnalités, mode avancé : voir 'En savoir Plus' en haut à droite !</li>";g=g+"</ul>";g=g+'<div class="understood"><a href=# onClick=\'neverShowIntro();\'>J\'ai compris: fermer et ne plus montrer ce message à l\'avenir!  <img src="images/icons/check.png" width="25px"></a></div>';f.innerHTML=g;return f};introInfo.addTo(map)}if(getCookie("mode")=="advanced"){toggleAdvancedMode()}if(debug_mode){console.log("createMap: "+(performance.now()-d))}affStops();affRoutes()}function createSubRoutes(){subRoutes=new Array;for(var c=0;c<_trips.length;c++){if(isFinite(_trips[c].frequency.freq)){for(var b=1;b<_trips[c].times.length;b++){_trips[c].times[b]-=_trips[c].frequency.freq}}if(_trips[c].stops in routes[_trips[c].routeId].subRoutes){var a=subRoutes[routes[_trips[c].routeId].subRoutes[_trips[c].stops]];var d=a.timeTable.length;while((d>0)&&(_trips[c].times[0]<a.timeTable[d-1][0])){--d}a.timeTable.splice(d,0,_trips[c].times);a.frequencies.splice(d,0,_trips[c].frequency);a.serviceIds.splice(d,0,_trips[c].serviceId)}else{var a=new Object;a.stops=_trips[c].stops;a.serviceIds=new Array;a.serviceIds.push(_trips[c].serviceId);a.timeTable=new Array;a.timeTable.push(_trips[c].times);a.frequencies=new Array;a.frequencies.push(_trips[c].frequency);a.id=subRoutes.length;a.routeId=_trips[c].routeId;a.shapeId=_trips[c].shapeId;subRoutes.push(a);routes[a.routeId].subRoutes[_trips[c].stops]=a.id;for(var b=0;b<_trips[c].stops.length;b++){if(_trips[c].stops[b]!==undefined){pStop=new Object;pStop.posInSubRoute=b;pStop.posInShape=findPosInList(stops[_trips[c].stops[b]],shapes[a.shapeId].stops);stops[_trips[c].stops[b]].subRoutes[a.id]=pStop}}}}if(debug_mode){console.log("createSubRoutes finished!")}affRoutes()}var _affStopsCounter=0;function affStops(){if(++_affStopsCounter>=2){for(var a=0;a<stops.length;a++){if(stops[a].isActive){if(stops[a].parentStation){pid=stopIndex[stops[a].parentStation];if(!stops[pid].circle){var b=new L.circleMarker(stops[a],{color:"#008000",opacity:1,radius:6,stroke:false,fillOpacity:0.5});stops[pid].circle=b;b.id=pid;b.bindPopup(stops[pid].name+" "+stops[a].code);b.addTo(network).bringToFront()}stops[a].circle=stops[pid].circle}else{if(!stops[a].circle){stops[a].isActive=false}}}}if(debug_mode){console.log("affStops finished!")}createControls()}}var _affRoutesCounter=0;function affRoutes(){if(++_affRoutesCounter>=3){if(debug_mode){console.log("starting affRoutes!")}for(var b=0;b<subRoutes.length;b++){var a=subRoutes[b].shapeId;if(shapes[a].polyline){if(debug_mode){console.log("WARNING: conflict in assigning shapes to subRoutes: subRoute["+b+"] has the same shape number : "+a+" as subRoute["+shapes[a].polyline.subRouteId+"] !!!")}}else{shapes[a].polyline=new L.polyline(shapes[a].stops,{color:activeRouteColor,opacity:0.6}).addTo(map);shapes[a].polyline.subRouteId=b}routes[subRoutes[b].routeId].polyline=shapes[a].polyline}if(debug_mode){console.log("affRoutes finished!")}affStops();initMapControls()}}function initVariables(){arrivalTime=new Array(stops.length);comesFrom=new Array(stops.length);for(var a=0;a<stops.length;a++){arrivalTime[a]=Infinity}startId=0;while((startId<stops.length-1)&&stops[startId].name!="Capitole"){++startId}startMarker=L.marker(stops[startId]).addTo(map);vWalk=3}var changeIcon=L.icon({iconUrl:"images/icons/change.png",iconRetinaUrl:"images/icons/change@2x.png",iconSize:[32,32],iconAnchor:[17,35],popupAnchor:[0,0]});var arrivalIcon=L.icon({iconUrl:"images/icons/flag.png",iconRetinaUrl:"images/icons/flag.png",iconSize:[32,32],iconAnchor:[0,35],popupAnchor:[0,0]});function highLightPath(g){var f=new Array();var e=stops[startId];var d=stops[g[g.length-1].stopId];var b;var a=false;for(i in g){b=stops[g[i].stopId];if(g[i].subRouteId>=0){if(a&&distance(e,d)>0.2&&distance(e,stops[startId])>0.2){transitionMarkers.push(L.marker(e,{icon:changeIcon}).addTo(map))}for(var c=e.subRoutes[g[i].subRouteId].posInShape;c<b.subRoutes[g[i].subRouteId].posInShape;++c){f.push(shapes[subRoutes[g[i].subRouteId].shapeId].polyline._latlngs[c])}if(distance(b,d)>0.2){transitionMarkers.push(L.marker(b,{clickable:false,icon:changeIcon}).addTo(map))}a=false}else{f.push(b);if(b.parentStation!=e.parentStation){a=true}}e=b}transitionMarkers.push(L.marker(b,{clickable:false,icon:arrivalIcon}).addTo(map));highLightedPath.setLatLngs(f)}function highLightStopSequence(a){highLightedPath.setLatLngs(a.map(function(b){return stops[b]}))}function highlightRoute(b){var a=subRoutes[b.target.subRouteId];b.target.setStyle({color:highlightRouteColor,opacity:1});b.target.bringToFront();info.update("<h4>Ligne "+routes[a.routeId].shortName+"</h4> "+routes[a.routeId].longName)}function resetHighlightRoute(b){var a=isActiveRoute[subRoutes[b.target.subRouteId].routeId]?activeRouteColor:inactiveRouteColor;b.target.setStyle({color:a,opacity:0.6});b.target.bringToBack();info.update()}function affStopInfo(o){$("#stopInfoDate").html($.datepicker.formatDate("dd/mm",$("#datepicker").datepicker("getDate")));$("#stopInfoId").html(stops[o].name);stopIds=[o];for(var g in stops[o].childStations){stopIds.push(stops[o].childStations[g])}var n='<h2 class="stopInfo"><img src="images/stop.png" width="25px">'+stops[o].name+"</h2>";var c=new Date(date.substr(0,4),Number(date.substr(4,2))-1,date.substr(6,2));n=n+'<h3 class="stopInfo">'+c.toLocaleDateString()+"</h3>\n";for(var e=0;e<stopIds.length;e++){s=stops[stopIds[e]];for(var m in s.subRoutes){posInSubRoute=s.subRoutes[m].posInSubRoute;subRoute=subRoutes[m];n=n+"<br/><b> Ligne "+routes[subRoute.routeId].shortName+" de "+stops[subRoute.stops[0]].name+" vers "+stops[subRoute.stops[subRoute.stops.length-1]].name+" : </b><br/>\n";var d=0;var a="stopInfo_before";for(var f=0;f<subRoute.timeTable.length;++f){if(isOn(services[subRoute.serviceIds[f]],date)){var b=subRoute.timeTable[f][posInSubRoute];if(a=="stopInfo_now"){a="stopInfo_after"}if(isFinite(subRoute.frequencies[f].freq)){var h=f+1;while((h in subRoute.timeTable)&&(!isOn(services[subRoute.serviceIds[h]],date))){++h}if((a=="stopInfo_before")&&(h in subRoute.timeTable)&&(subRoute.timeTable[h][posInSubRoute]>startHour)){a="stopInfo_now"}}else{if((a=="stopInfo_before")&&(b>startHour)){a="stopInfo_now"}}var p=",";if(d%15==0){p="<br/>"}n=n+p+'<span class="'+a+'">'+real2hour(b);if(isFinite(subRoute.frequencies[f].freq)){n=n+" puis toutes les "+Math.round(60*subRoute.frequencies[f].freq)+" minutes"}n=n+"</span>";d+=1}}n=n+"<br/>\n"}}map.scrollWheelZoom.disable();n='<div class="timeTable"><a  href=# onClick=\'lineInfo.update("Clici droit pour avoir les horaires de la ligne ou de passage au stop");map.scrollWheelZoom.enable();\' style="position:absolute; right:10px;"><img src="images/icons/close.png" width="30px" /></a><br/><br/>'+n+"</div>";lineInfo.update(n)}function affRouteInfo(l){$("#routeInfoDate").html($.datepicker.formatDate("dd/mm",$("#datepicker").datepicker("getDate")));$("#routeInfoId").html(routes[l].shortName);var h='<h2 class="stopInfo"><img src="images/'+((routes[l].type==3)?"bus":"metro")+'.png" width="25px">'+routes[l].shortName+"  -  "+routes[l].longName+"</h2>";var b=new Date(date.substr(0,4),Number(date.substr(4,2))-1,date.substr(6,2));h=h+'<h3 class="stopInfo">'+b.toLocaleDateString()+"</h3>\n";var g=0;for(var e in routes[l].subRoutes){subRoute=subRoutes[routes[l].subRoutes[e]];h=h+"<br/><b>Parcours "+(++g)+' : \n</b><table class="times">';for(var d in subRoute.stops){h=h+"<tr><th>"+stops[subRoute.stops[d]].name+"</th>";var m="stopInfo_before";for(var c=0;c<subRoute.timeTable.length;++c){if(isOn(services[subRoute.serviceIds[c]],date)){var a=subRoute.timeTable[c][d];if(isNaN(subRoute.frequencies[c].freq)){if(m=="stopInfo_now"){m="stopInfo_after"}if((m=="stopInfo_before")&&(a>startHour)){m="stopInfo_now"}h=h+'<td class="'+m+'">'+real2hour(a)+"</td>"}else{if(m=="stopInfo_now"){m="stopInfo_after"}var f=c+1;while((f in subRoute.timeTable)&&(!isOn(services[subRoute.serviceIds[f]],date))){++f}if((m=="stopInfo_before")&&(f in subRoute.timeTable)&&(subRoute.timeTable[f][d]>startHour)){m="stopInfo_now"}h=h+'<td class="'+m+'">'+real2hour(a);if(isFinite(subRoute.frequencies[c].freq)){h=h+" puis toutes les "+Math.round(60*subRoute.frequencies[c].freq)+" minutes"}h=h+"</td>"}}}h=h+"</tr>\n"}h=h+"</table>\n"}map.scrollWheelZoom.disable();h='<div class="timeTable"><a  href=# onClick=\'lineInfo.update("Clic droit pour avoir les horaires de la ligne ou de passage au stop");map.scrollWheelZoom.enable();\' style="position:absolute; right:10px;"><img src="images/icons/close.png" width="30px"/></a><br/><br/>'+h+"</div>";lineInfo.update(h)}function drawAccessible(){if(debug_mode){var b=performance.now()}for(var a=0;a<stops.length;a++){if(stops[a].isActive){if(arrivalTime[a]<startHour+maxMinute/60){var c=val2color((arrivalTime[a]-startHour)/(maxMinute/59));stops[a].circle.setStyle({fillColor:c,fillOpacity:1})}else{stops[a].circle.setStyle({fillColor:inactiveNodeColor,fillOpacity:0.5})}}}if(debug_mode){console.log("drawAccessible: "+(performance.now()-b)+"maxMinute :"+maxMinute+" startHour :"+startHour)}}function drawAccessibleZones(){if(debug_mode){var c=performance.now()}for(var b=0;b<stops.length;b++){if(stops[b].isActive){if(arrivalTime[b]<startHour+maxMinute/60){var a=(startHour+maxMinute/60-arrivalTime[b])*vWalk*1000;accessibleZones.circles[b].setRadius(a).bringToBack()}else{accessibleZones.circles[b].setRadius(0)}}}if(debug_mode){console.log("drawAccessibleZones: "+(performance.now()-c))}};