debug_mode=true;function findPosInList(a,e){var c=0;var g=distance(a,e[0]);for(var b=1;b<e.length;b++){var f=distance(a,e[b]);if(f<g){g=f;c=b}}return(c)}function computeDwalk(){if(debug_mode){var d=performance.now()}var a=3;dWalk=new Array(stops.length);for(var c=0;c<stops.length;c++){dWalk[c]=new Array;for(var b=0;b<stops.length;b++){var e=distance(stops[c],stops[b])/a;if(e<15/60){dWalk[c][b]=e}}}if(debug_mode){console.log("computeDwalk: "+(performance.now()-d))}}function saveDWalk(){var b=[];for(var a=0;a<dWalk.length;a++){tmp=[a];for(j in dWalk[a]){tmp.push(Number(j));tmp.push(Math.round(10000*dWalk[a][j])/10000)}tmp.push(Infinity);b.push(tmp)}saveAs(new Blob(b,{type:"text/plain; charset=utf-8"}),"dWalk.txt")}function checkData(){for(var e=0;e<subRoutes.length;e++){for(var d=0;d<subRoutes[e].timeTable.length;d++){for(var a=0;a<subRoutes[e].timeTable[d].length;a++){if(subRoutes[e].timeTable[d][a]===undefined){if(debug_mode){console.log("subRoute "+e+" trip "+d+" stop "+a+" routeId = "+subRoutes[e].routeId)}}}}}if(debug_mode){console.log("Number of stops: "+stops.length)}if(debug_mode){console.log("Number of routes: "+routes.length)}if(debug_mode){console.log("Number of subRoutes: "+subRoutes.length)}var c=new Array;for(var e=0;e<routes.length;e++){tmp=0;for(var d in routes[e].subRoutes){++tmp}if(tmp in c){++c[tmp]}else{c[tmp]=1}}if(debug_mode){console.log(c)}var b=new Array;for(var e=0;e<stops.length;e++){tmp=0;for(var d in dWalk[e]){++tmp}if(tmp in b){++b[tmp]}else{b[tmp]=1}}if(debug_mode){console.log(b)}var f=0;for(var e=0;e<stops.length;e++){if(stops[e].isActive){++f}}if(debug_mode){console.log("nb of active stops: "+f)}}function isOn(a,b){return(((a.isOnByDay[weekDay])&&(a.startDate<=b)&&(a.endDate>=b)&&(a.exceptions[b]!=2))||(a.exceptions[b]==1))}function computeShortestPath(){var e=Array(stops.length);var p=0;var a=Array(stops.length);for(var v=0;v<stops.length;v++){a[v]=-1}function o(i){e[p]=i;a[i]=p;h(p++)}function u(){var i=e[0];a[i]=-1;e[0]=e[--p];a[e[0]]=0;c();return(i)}function h(y){var A=y;var z=e[A];var x=Math.floor((A-1)/2);while((x>=0)&&(arrivalTime[e[A]]<arrivalTime[e[x]])){e[A]=e[x];e[x]=z;a[z]=x;a[e[A]]=A;A=x;z=e[A];x=Math.floor((A-1)/2)}}function c(){var y=0;var x=e[y];var i=true;while((2*y+2<p)&&i){var z=arrivalTime[e[2*y+1]]<arrivalTime[e[2*y+2]]?2*y+1:2*y+2;if(arrivalTime[e[y]]>arrivalTime[e[z]]){e[y]=e[z];e[z]=x;a[x]=z;a[e[y]]=y;y=z;x=e[z]}else{i=false}}if((p==2*y+2)&&arrivalTime[e[2*y+1]]<x){e[y]=e[2*y+1];e[2*y+1]=x;a[x]=2*y+1;a[e[y]]=y}}function k(i,y,x){var z=a[i];if(z>=0){if(arrivalTime[i]>y){arrivalTime[i]=y;h(z);comesFrom[i]={stopId:f,subRouteId:x}}}else{arrivalTime[i]=y;comesFrom[i]={stopId:f,subRouteId:x};o(i)}}if(debug_mode){var q=performance.now()}for(var v=0;v<stops.length;v++){arrivalTime[v]=Infinity}comesFrom=new Array(stops.length);for(var v=0;v<stops.length;v++){comesFrom[v]=new Object}p=0;o(startId);finished=new Array(stops.length);arrivalTime[startId]=startHour;comesFrom[startId]={stopId:-1,subRouteId:-1};while(p>0){var f=u();finished[f]=1;for(var n in dWalk[f]){if(finished[n]!=1){k(Number(n),arrivalTime[f]+dWalk[f][n],-1)}}for(var b in stops[f].subRoutes){if(isActiveRoute[subRoutes[b].routeId]){var r=subRoutes[b].timeTable;var d=subRoutes[b].frequencies;var l=subRoutes[b].serviceIds;var w=stops[f].subRoutes[b].posInSubRoute;var g=0;var m=false;for(;g<r.length;g++){if(isOn(services[l[g]],date)){if(isFinite(d[g].freq)&&arrivalTime[f]>=d[g].startTime&&arrivalTime[f]<=d[g].endTime){m=true;break}else{if(arrivalTime[f]<=r[g][w]){break}}}}if(g<r.length){if(m){for(var t=w+1;t<subRoutes[b].stops.length;t++){var n=subRoutes[b].stops[t];if(finished[n]!=1){var s=d[g].freq/2+r[g][t]-r[g][w];k(n,arrivalTime[f]+s+1/60,b)}}}else{for(var t=w+1;t<subRoutes[b].stops.length;t++){var n=subRoutes[b].stops[t];if(finished[n]!=1){k(n,r[g][t],b)}}}}}}}if(debug_mode){console.log("computeShortestPath: "+(performance.now()-q))}};